[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "aws-data-discovery-agent"
version = "1.0.0"
description = "AWS Data Discovery & PII Detection Agent with Lake Formation integration"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "AWS Data Discovery Team"}
]
keywords = ["aws", "pii", "data-discovery", "classification", "fastmcp", "mcp", "privacy", "lake-formation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Security",
    "Topic :: System :: Monitoring",
    "Topic :: Data Processing"
]
requires-python = ">=3.8"
dependencies = [
    "fastmcp>=2.11.0",
    "mcp>=1.12.0",
    "boto3>=1.34.0",
    "botocore>=1.34.0",
    "mcp-client>=0.5.0",
    "httpx>=0.25.0",
    "websockets>=11.0.0",
    "streamlit>=1.28.0",
    "pandas>=2.0.0",
    "plotly>=5.17.0",
    "diagrams>=0.23.0",
    "graphviz>=0.20.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "aiofiles>=23.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0"
]

[project.urls]
Homepage = "https://github.com/your-org/aws-data-discovery-agent"
Repository = "https://github.com/your-org/aws-data-discovery-agent"
Documentation = "https://github.com/your-org/aws-data-discovery-agent/docs"
"Bug Tracker" = "https://github.com/your-org/aws-data-discovery-agent/issues"

[project.scripts]
aws-data-discovery = "servers.run_data_discovery_agent:main"
pii-dashboard = "servers.pii_dashboard:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["core*", "servers*", "config*", "diagrams*"]
exclude = ["tests*", "awslabs-mcp*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | awslabs-mcp
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
exclude = ["awslabs-mcp/"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = ["awslabs-mcp/", ".git", "__pycache__", "build", "dist"]